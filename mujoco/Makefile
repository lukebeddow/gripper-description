# a makefile to generate mujoco source files

# this makefile builds mujoco model files, an xml format called mjcf.
# There are three key targets of makefile:
# 	1. mjcf files for the robots (gripper, panda)
#		2. mjcf files for objects, the 'mjcf_include' files
#		3. a set of task files (created by xml_script.py) which combine robots and
#			 objects into final mjcf files which can be loaded for grasping tasks.
#
# xml_script.py current takes all the objects generated by the mjcf_include files
# and randomly splits them up, making a series of task files each with a random
# set of objects. So when you load a task file, you get a random assortment of
# objects you can try to grasp. This part of the makefile is always run.

# ----- user defined options ----- #

# does xml_script generate object files, override @ command line eg make GEN_OBJECTS=0
GEN_OBJECTS = 1 # bool: 0/1 only

# where do we put the task files, override @ command line eg make GEN_OBJECTS=abcd
TASK = task

# ----- variables not recommended to change ----- #

# define directory names
#    note that when make is called from 'build_multi_segment_set.py' these can be
#    overwritten by settings in that file.
DIRNAME = build
URDFDIR = urdf
XACRODIR = xacro
INCDIR = objects
MJCOMPILE = /home/luke/repo/mujoco/mujoco-2.2.0/bin/compile

# define directory structure (this is hardcoded in 'xml_script.py')
TASKDIR = $(DIRNAME)/$(TASK)
MJINCDIR = $(DIRNAME)/$(INCDIR)
ASSETDIR = $(MJINCDIR)/assets
OBJDIR = $(MJINCDIR)/objects
KEYDIR = $(TASKDIR)/keyframes

# directories and files containing urdf dependencies
XACROPATH = ../$(XACRODIR)
CONFIGDEP = ../config/gripper.yaml

# define additional dependencies for the mjcf_include xmls
MJINCTARGET := objects.xml assets.xml details.xml
MJDEP := define_objects.yaml build_object_set.py

MAKEFLAGS += -j8 # run on up to 8 parallel cpu cores

# ----- automatically generated variables ----- #

# use the robot xacros to get the desired mjcf target names for robots
XACROS := $(wildcard $(XACRODIR)/*.urdf.xacro)
URDFS := $(patsubst $(XACRODIR)/%.urdf.xacro, $(URDFDIR)/%.urdf, $(XACROS))
MJCFS := $(patsubst $(XACRODIR)/%.urdf.xacro, $(DIRNAME)/%.xml, $(XACROS))

# add the additional dependencies for the mjcf_include files
MJDEP := $(patsubst %, $(MJINCDIR)/%, $(MJDEP))
MJINCTARGET := $(patsubst %, $(MJINCDIR)/%, $(MJINCTARGET))

# create the target directories if they don't exist, unless we run 'make clean'
ifneq ($(filter clean, $(MAKECMDGOALS)), clean)
DIRS := $(URDFDIR) $(TASKDIR) $(ASSETDIR) $(OBJDIR) $(KEYDIR)
$(info $(shell mkdir -p $(DIRS)))
endif

# find files that we depend on for updating urdf changes
DEPS := $(wildcard $(XACROPATH)/*.xacro) $(CONFIGDEP)

# ----- start of make ----- #

# first run preprocess to source ros, that automatically runs 'make targets'
all: $(MJCFS) generate_xml
	echo Making the task xml files - note this command is always run
	rm -f $(TASKDIR)/*.xml
	rm -f $(ASSETDIR)/*.xml
	rm -f $(OBJDIR)/*.xml
	rm -f $(KEYDIR)/*.xml
	python ./xml_script.py \
		--build-folder $(DIRNAME) \
		--task-folder $(TASK) \
		--objects-folder $(INCDIR) \
		--gen-objects $(GEN_OBJECTS)

# build the mujoco mjcf files
.PHONY: $(MJCFS) # phony to always run, so xml_script is never run twice on same file
$(MJCFS): $(DIRNAME)/%.xml : $(URDFDIR)/%.urdf
	rm -f $@
	cp $< $(DIRNAME)/$(notdir $<) &&\
	cd $(DIRNAME) &&\
	$(MJCOMPILE) $(notdir $<) $(notdir $@) &&\
  rm $(notdir $<)

# build the urdfs which depend on the xacro files
$(URDFS): $(URDFDIR)/%.urdf : xacro/%.urdf.xacro $(DEPS)
	./xacro3 $< > $@

# create the individual object xml includes, phony so always runs if called
.PHONY: generate_xml
generate_xml: $(MJDEP)
	python3 $(MJINCDIR)/build_object_set.py \
		--gen-objects $(GEN_OBJECTS)

clean:
	rm -f $(URDFS)
	rm -f $(MJCFS)
	rm -f $(MJINCTARGET)
	rm -f $(ASSETDIR)/*
	rm -f $(OBJDIR)/*